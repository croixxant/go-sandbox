// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0

package internal

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	// -- name: UpdateWallet :exec
	// UPDATE wallets
	// SET balance = ?
	// WHERE id = ?;
	AddWalletBalance(ctx context.Context, arg AddWalletBalanceParams) error
	CreateEntry(ctx context.Context, arg CreateEntryParams) (int64, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) error
	CreateTransfer(ctx context.Context, arg CreateTransferParams) (int64, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (int64, error)
	CreateWallet(ctx context.Context, arg CreateWalletParams) (int64, error)
	DeleteWallet(ctx context.Context, id int64) error
	GetEntry(ctx context.Context, id int64) (*Entry, error)
	GetSession(ctx context.Context, id uuid.UUID) (*Session, error)
	GetTransfer(ctx context.Context, id int64) (*Transfer, error)
	GetUser(ctx context.Context, username string) (*User, error)
	GetWallet(ctx context.Context, id int64) (*Wallet, error)
	ListEntries(ctx context.Context, arg ListEntriesParams) ([]*Entry, error)
	ListTransfers(ctx context.Context, arg ListTransfersParams) ([]*Transfer, error)
	// -- name: GetWalletForUpdate :one
	// SELECT * FROM wallets
	// WHERE id = ? LIMIT 1
	// FOR UPDATE;
	ListWallets(ctx context.Context, arg ListWalletsParams) ([]*Wallet, error)
}

var _ Querier = (*Queries)(nil)
